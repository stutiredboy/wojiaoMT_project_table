	// Protocol

	enum { PROTOCOL_TYPE = 786432 };

	fire::pb::item::BagTypes b1;
	fire::pb::KickErrConst b4;
	fire::pb::DataInit b8;
	fire::pb::SysConfigType b9;
	fire::pb::pet::PetTypeEnum b10;
	fire::pb::pet::PetColumnTypes b11;
	fire::pb::battle::OperationType b14;
	fire::pb::battle::ResultType b15;
	fire::pb::battle::BattlerType b16;
	fire::pb::team::TeamMemberState b17;
	fire::pb::npc::NpcServices b18;
	fire::pb::team::TeamError b20;
	fire::pb::title::TitleInfo b21;
	fire::pb::title::TitleError b22;
	fire::pb::npc::NpcHealType b23;
	fire::pb::attr::AttrType b27;
	fire::pb::attr::EffectType b28;
	fire::pb::item::IDType b29;
	fire::pb::move::PickItemTypes b31;
	fire::pb::pet::PetChatLimit b33;
	fire::pb::ErrorCodes b43;
	fire::pb::npc::MultiExpError b49;
	fire::pb::npc::BattleToNpcError b54;
	fire::pb::circletask::SpecialQuestType b55;
	fire::pb::circletask::SpecialQuestNpcMsg b56;
	fire::pb::circletask::SpecialQuestID b58;
	fire::pb::npc::SubmitType b61;
	fire::pb::battle::BattleAimRelation b63;
	fire::pb::npc::NpcBuyType b64;
	fire::pb::school::ShouXiLimit b65;
	fire::pb::school::ShouXiMsgID b66;
	fire::pb::attr::FightAttrType b72;
	fire::pb::skill::SkillInfo b73;
	fire::pb::npc::ImpExamType b74;
	fire::pb::mission::AllowTeam b75;
	fire::pb::talk::ChatMsgId b76;
	fire::pb::battle::BattleType b87;
	fire::pb::npc::TransmitTypes b89;
	fire::pb::master::RelationType b90;
	fire::pb::master::OnLineState b91;
	fire::pb::master::DataConfig b92;
	fire::pb::master::InitiativeType b97;
	fire::pb::mission::FairylandStatus b101;
	fire::pb::KeyCounterIndex b102;
	fire::pb::pet::PetColour b105;
	fire::pb::BeginnerTipType b106;
	fire::pb::mission::ReadTimeType b109;
	fire::pb::move::SceneState b111;
	fire::pb::move::DynamicSceneType b112;
	fire::pb::RoleState b113;
	fire::pb::battle::BattleEnviroment b114;
	fire::pb::LogPriority b116;
	fire::pb::ranklist::LevelRankData b120;
	fire::pb::team::TeamState b135;
	fire::pb::ranklist::PetGradeRankData b148;
	fire::pb::move::SpriteComponents b151;
	fire::pb::item::EquipItemType b152;
	fire::pb::AU2GameType b156;
	fire::pb::Pet b168;
	fire::pb::Petskill b169;
	fire::pb::clan::ClanPositionType b170;
	fire::pb::clan::ClanDMapInfo b174;
	fire::pb::clan::ClanSkill b176;
	fire::pb::clan::ClanInfo b181;
	fire::pb::circletask::CircTaskClass b191;
	fire::pb::shop::ShopBuyType b192;
	fire::pb::hook::HookDataUpdateEnum b193;
	fire::pb::hook::HookGetDpointResEnum b194;
	fire::pb::hook::HookMsg2ClientEnum b195;
	fire::pb::hook::HookFreeDpointResEnum b196;
	fire::pb::activity::ActivityType b197;
	fire::pb::circletask::CircTaskGotoType b198;
	fire::pb::game::MoneyType b199;
	fire::pb::npc::NpcServiceMappingTypes b200;
	fire::pb::shop::MarketType b201;
	fire::pb::attr::ScoreType b202;
	fire::pb::shop::GoodsType b203;
	fire::pb::clan::FireReasonType b204;
	fire::pb::attr::RoleCurrency b205;
	fire::pb::battle::QCmodelType b206;
	fire::pb::npc::ImpExamAssistType b207;
	fire::pb::skill::AssistSkill b208;
	fire::pb::skill::EquipSkill b209;
	fire::pb::battle::ResultItem b210;
	fire::pb::battle::livedie::LDmodelType b211;
	fire::pb::fushi::redpack::RedPackType b212;
	fire::pb::fushi::redpack::RedPackState b213;
	fire::pb::move::PickUpItem b214;
	fire::pb::RoleInfo b215;
	fire::pb::talk::FunModelType b216;
	fire::pb::FunOpenCloseType b217;

	BeanImport() {
		type = PROTOCOL_TYPE;
	}

	BeanImport(const fire::pb::item::BagTypes & _b1_, const fire::pb::KickErrConst & _b4_, const fire::pb::DataInit & _b8_, const fire::pb::SysConfigType & _b9_, const fire::pb::pet::PetTypeEnum & _b10_, const fire::pb::pet::PetColumnTypes & _b11_, const fire::pb::battle::OperationType & _b14_, const fire::pb::battle::ResultType & _b15_, const fire::pb::battle::BattlerType & _b16_, const fire::pb::team::TeamMemberState & _b17_, const fire::pb::npc::NpcServices & _b18_, const fire::pb::team::TeamError & _b20_, const fire::pb::title::TitleInfo & _b21_, const fire::pb::title::TitleError & _b22_, const fire::pb::npc::NpcHealType & _b23_, const fire::pb::attr::AttrType & _b27_, const fire::pb::attr::EffectType & _b28_, const fire::pb::item::IDType & _b29_, const fire::pb::move::PickItemTypes & _b31_, const fire::pb::pet::PetChatLimit & _b33_, const fire::pb::ErrorCodes & _b43_, const fire::pb::npc::MultiExpError & _b49_, const fire::pb::npc::BattleToNpcError & _b54_, const fire::pb::circletask::SpecialQuestType & _b55_, const fire::pb::circletask::SpecialQuestNpcMsg & _b56_, const fire::pb::circletask::SpecialQuestID & _b58_, const fire::pb::npc::SubmitType & _b61_, const fire::pb::battle::BattleAimRelation & _b63_, const fire::pb::npc::NpcBuyType & _b64_, const fire::pb::school::ShouXiLimit & _b65_, const fire::pb::school::ShouXiMsgID & _b66_, const fire::pb::attr::FightAttrType & _b72_, const fire::pb::skill::SkillInfo & _b73_, const fire::pb::npc::ImpExamType & _b74_, const fire::pb::mission::AllowTeam & _b75_, const fire::pb::talk::ChatMsgId & _b76_, const fire::pb::battle::BattleType & _b87_, const fire::pb::npc::TransmitTypes & _b89_, const fire::pb::master::RelationType & _b90_, const fire::pb::master::OnLineState & _b91_, const fire::pb::master::DataConfig & _b92_, const fire::pb::master::InitiativeType & _b97_, const fire::pb::mission::FairylandStatus & _b101_, const fire::pb::KeyCounterIndex & _b102_, const fire::pb::pet::PetColour & _b105_, const fire::pb::BeginnerTipType & _b106_, const fire::pb::mission::ReadTimeType & _b109_, const fire::pb::move::SceneState & _b111_, const fire::pb::move::DynamicSceneType & _b112_, const fire::pb::RoleState & _b113_, const fire::pb::battle::BattleEnviroment & _b114_, const fire::pb::LogPriority & _b116_, const fire::pb::ranklist::LevelRankData & _b120_, const fire::pb::team::TeamState & _b135_, const fire::pb::ranklist::PetGradeRankData & _b148_, const fire::pb::move::SpriteComponents & _b151_, const fire::pb::item::EquipItemType & _b152_, const fire::pb::AU2GameType & _b156_, const fire::pb::Pet & _b168_, const fire::pb::Petskill & _b169_, const fire::pb::clan::ClanPositionType & _b170_, const fire::pb::clan::ClanDMapInfo & _b174_, const fire::pb::clan::ClanSkill & _b176_, const fire::pb::clan::ClanInfo & _b181_, const fire::pb::circletask::CircTaskClass & _b191_, const fire::pb::shop::ShopBuyType & _b192_, const fire::pb::hook::HookDataUpdateEnum & _b193_, const fire::pb::hook::HookGetDpointResEnum & _b194_, const fire::pb::hook::HookMsg2ClientEnum & _b195_, const fire::pb::hook::HookFreeDpointResEnum & _b196_, const fire::pb::activity::ActivityType & _b197_, const fire::pb::circletask::CircTaskGotoType & _b198_, const fire::pb::game::MoneyType & _b199_, const fire::pb::npc::NpcServiceMappingTypes & _b200_, const fire::pb::shop::MarketType & _b201_, const fire::pb::attr::ScoreType & _b202_, const fire::pb::shop::GoodsType & _b203_, const fire::pb::clan::FireReasonType & _b204_, const fire::pb::attr::RoleCurrency & _b205_, const fire::pb::battle::QCmodelType & _b206_, const fire::pb::npc::ImpExamAssistType & _b207_, const fire::pb::skill::AssistSkill & _b208_, const fire::pb::skill::EquipSkill & _b209_, const fire::pb::battle::ResultItem & _b210_, const fire::pb::battle::livedie::LDmodelType & _b211_, const fire::pb::fushi::redpack::RedPackType & _b212_, const fire::pb::fushi::redpack::RedPackState & _b213_, const fire::pb::move::PickUpItem & _b214_, const fire::pb::RoleInfo & _b215_, const fire::pb::talk::FunModelType & _b216_, const fire::pb::FunOpenCloseType & _b217_)
		: b1(_b1_), b4(_b4_), b8(_b8_), b9(_b9_), b10(_b10_), b11(_b11_), b14(_b14_), b15(_b15_), b16(_b16_), b17(_b17_), b18(_b18_), b20(_b20_), b21(_b21_), b22(_b22_), b23(_b23_), b27(_b27_), b28(_b28_), b29(_b29_), b31(_b31_), b33(_b33_), b43(_b43_), b49(_b49_), b54(_b54_), b55(_b55_), b56(_b56_), b58(_b58_), b61(_b61_), b63(_b63_), b64(_b64_), b65(_b65_), b66(_b66_), b72(_b72_), b73(_b73_), b74(_b74_), b75(_b75_), b76(_b76_), b87(_b87_), b89(_b89_), b90(_b90_), b91(_b91_), b92(_b92_), b97(_b97_), b101(_b101_), b102(_b102_), b105(_b105_), b106(_b106_), b109(_b109_), b111(_b111_), b112(_b112_), b113(_b113_), b114(_b114_), b116(_b116_), b120(_b120_), b135(_b135_), b148(_b148_), b151(_b151_), b152(_b152_), b156(_b156_), b168(_b168_), b169(_b169_), b170(_b170_), b174(_b174_), b176(_b176_), b181(_b181_), b191(_b191_), b192(_b192_), b193(_b193_), b194(_b194_), b195(_b195_), b196(_b196_), b197(_b197_), b198(_b198_), b199(_b199_), b200(_b200_), b201(_b201_), b202(_b202_), b203(_b203_), b204(_b204_), b205(_b205_), b206(_b206_), b207(_b207_), b208(_b208_), b209(_b209_), b210(_b210_), b211(_b211_), b212(_b212_), b213(_b213_), b214(_b214_), b215(_b215_), b216(_b216_), b217(_b217_) {
		type = PROTOCOL_TYPE;
	}

	explicit BeanImport(void *) : Protocol(PROTOCOL_TYPE) { } // define stub

	bool _validator_() const {
		if (!b1._validator_()) return false;
		if (!b4._validator_()) return false;
		if (!b8._validator_()) return false;
		if (!b9._validator_()) return false;
		if (!b10._validator_()) return false;
		if (!b11._validator_()) return false;
		if (!b14._validator_()) return false;
		if (!b15._validator_()) return false;
		if (!b16._validator_()) return false;
		if (!b17._validator_()) return false;
		if (!b18._validator_()) return false;
		if (!b20._validator_()) return false;
		if (!b21._validator_()) return false;
		if (!b22._validator_()) return false;
		if (!b23._validator_()) return false;
		if (!b27._validator_()) return false;
		if (!b28._validator_()) return false;
		if (!b29._validator_()) return false;
		if (!b31._validator_()) return false;
		if (!b33._validator_()) return false;
		if (!b43._validator_()) return false;
		if (!b49._validator_()) return false;
		if (!b54._validator_()) return false;
		if (!b55._validator_()) return false;
		if (!b56._validator_()) return false;
		if (!b58._validator_()) return false;
		if (!b61._validator_()) return false;
		if (!b63._validator_()) return false;
		if (!b64._validator_()) return false;
		if (!b65._validator_()) return false;
		if (!b66._validator_()) return false;
		if (!b72._validator_()) return false;
		if (!b73._validator_()) return false;
		if (!b74._validator_()) return false;
		if (!b75._validator_()) return false;
		if (!b76._validator_()) return false;
		if (!b87._validator_()) return false;
		if (!b89._validator_()) return false;
		if (!b90._validator_()) return false;
		if (!b91._validator_()) return false;
		if (!b92._validator_()) return false;
		if (!b97._validator_()) return false;
		if (!b101._validator_()) return false;
		if (!b102._validator_()) return false;
		if (!b105._validator_()) return false;
		if (!b106._validator_()) return false;
		if (!b109._validator_()) return false;
		if (!b111._validator_()) return false;
		if (!b112._validator_()) return false;
		if (!b113._validator_()) return false;
		if (!b114._validator_()) return false;
		if (!b116._validator_()) return false;
		if (!b120._validator_()) return false;
		if (!b135._validator_()) return false;
		if (!b148._validator_()) return false;
		if (!b151._validator_()) return false;
		if (!b152._validator_()) return false;
		if (!b156._validator_()) return false;
		if (!b168._validator_()) return false;
		if (!b169._validator_()) return false;
		if (!b170._validator_()) return false;
		if (!b174._validator_()) return false;
		if (!b176._validator_()) return false;
		if (!b181._validator_()) return false;
		if (!b191._validator_()) return false;
		if (!b192._validator_()) return false;
		if (!b193._validator_()) return false;
		if (!b194._validator_()) return false;
		if (!b195._validator_()) return false;
		if (!b196._validator_()) return false;
		if (!b197._validator_()) return false;
		if (!b198._validator_()) return false;
		if (!b199._validator_()) return false;
		if (!b200._validator_()) return false;
		if (!b201._validator_()) return false;
		if (!b202._validator_()) return false;
		if (!b203._validator_()) return false;
		if (!b204._validator_()) return false;
		if (!b205._validator_()) return false;
		if (!b206._validator_()) return false;
		if (!b207._validator_()) return false;
		if (!b208._validator_()) return false;
		if (!b209._validator_()) return false;
		if (!b210._validator_()) return false;
		if (!b211._validator_()) return false;
		if (!b212._validator_()) return false;
		if (!b213._validator_()) return false;
		if (!b214._validator_()) return false;
		if (!b215._validator_()) return false;
		if (!b216._validator_()) return false;
		if (!b217._validator_()) return false;
		return true;
	}

	FireNet::Marshal::OctetsStream & marshal(FireNet::Marshal::OctetsStream & _os_) const {
		if (!_validator_()) {
			throw Marshal::Exception();
		}
		_os_ << b1;
		_os_ << b4;
		_os_ << b8;
		_os_ << b9;
		_os_ << b10;
		_os_ << b11;
		_os_ << b14;
		_os_ << b15;
		_os_ << b16;
		_os_ << b17;
		_os_ << b18;
		_os_ << b20;
		_os_ << b21;
		_os_ << b22;
		_os_ << b23;
		_os_ << b27;
		_os_ << b28;
		_os_ << b29;
		_os_ << b31;
		_os_ << b33;
		_os_ << b43;
		_os_ << b49;
		_os_ << b54;
		_os_ << b55;
		_os_ << b56;
		_os_ << b58;
		_os_ << b61;
		_os_ << b63;
		_os_ << b64;
		_os_ << b65;
		_os_ << b66;
		_os_ << b72;
		_os_ << b73;
		_os_ << b74;
		_os_ << b75;
		_os_ << b76;
		_os_ << b87;
		_os_ << b89;
		_os_ << b90;
		_os_ << b91;
		_os_ << b92;
		_os_ << b97;
		_os_ << b101;
		_os_ << b102;
		_os_ << b105;
		_os_ << b106;
		_os_ << b109;
		_os_ << b111;
		_os_ << b112;
		_os_ << b113;
		_os_ << b114;
		_os_ << b116;
		_os_ << b120;
		_os_ << b135;
		_os_ << b148;
		_os_ << b151;
		_os_ << b152;
		_os_ << b156;
		_os_ << b168;
		_os_ << b169;
		_os_ << b170;
		_os_ << b174;
		_os_ << b176;
		_os_ << b181;
		_os_ << b191;
		_os_ << b192;
		_os_ << b193;
		_os_ << b194;
		_os_ << b195;
		_os_ << b196;
		_os_ << b197;
		_os_ << b198;
		_os_ << b199;
		_os_ << b200;
		_os_ << b201;
		_os_ << b202;
		_os_ << b203;
		_os_ << b204;
		_os_ << b205;
		_os_ << b206;
		_os_ << b207;
		_os_ << b208;
		_os_ << b209;
		_os_ << b210;
		_os_ << b211;
		_os_ << b212;
		_os_ << b213;
		_os_ << b214;
		_os_ << b215;
		_os_ << b216;
		_os_ << b217;
		return _os_;
	}

	const FireNet::Marshal::OctetsStream & unmarshal(const FireNet::Marshal::OctetsStream & _os_) {
		_os_ >> b1;
		_os_ >> b4;
		_os_ >> b8;
		_os_ >> b9;
		_os_ >> b10;
		_os_ >> b11;
		_os_ >> b14;
		_os_ >> b15;
		_os_ >> b16;
		_os_ >> b17;
		_os_ >> b18;
		_os_ >> b20;
		_os_ >> b21;
		_os_ >> b22;
		_os_ >> b23;
		_os_ >> b27;
		_os_ >> b28;
		_os_ >> b29;
		_os_ >> b31;
		_os_ >> b33;
		_os_ >> b43;
		_os_ >> b49;
		_os_ >> b54;
		_os_ >> b55;
		_os_ >> b56;
		_os_ >> b58;
		_os_ >> b61;
		_os_ >> b63;
		_os_ >> b64;
		_os_ >> b65;
		_os_ >> b66;
		_os_ >> b72;
		_os_ >> b73;
		_os_ >> b74;
		_os_ >> b75;
		_os_ >> b76;
		_os_ >> b87;
		_os_ >> b89;
		_os_ >> b90;
		_os_ >> b91;
		_os_ >> b92;
		_os_ >> b97;
		_os_ >> b101;
		_os_ >> b102;
		_os_ >> b105;
		_os_ >> b106;
		_os_ >> b109;
		_os_ >> b111;
		_os_ >> b112;
		_os_ >> b113;
		_os_ >> b114;
		_os_ >> b116;
		_os_ >> b120;
		_os_ >> b135;
		_os_ >> b148;
		_os_ >> b151;
		_os_ >> b152;
		_os_ >> b156;
		_os_ >> b168;
		_os_ >> b169;
		_os_ >> b170;
		_os_ >> b174;
		_os_ >> b176;
		_os_ >> b181;
		_os_ >> b191;
		_os_ >> b192;
		_os_ >> b193;
		_os_ >> b194;
		_os_ >> b195;
		_os_ >> b196;
		_os_ >> b197;
		_os_ >> b198;
		_os_ >> b199;
		_os_ >> b200;
		_os_ >> b201;
		_os_ >> b202;
		_os_ >> b203;
		_os_ >> b204;
		_os_ >> b205;
		_os_ >> b206;
		_os_ >> b207;
		_os_ >> b208;
		_os_ >> b209;
		_os_ >> b210;
		_os_ >> b211;
		_os_ >> b212;
		_os_ >> b213;
		_os_ >> b214;
		_os_ >> b215;
		_os_ >> b216;
		_os_ >> b217;
		if (!_validator_()) {
			throw Marshal::Exception();
		}
		return _os_;
	}

	aio::Protocol * Clone() const { return new BeanImport(*this); }
	int  PriorPolicy( ) const { return 1; }
	bool SizePolicy(size_t size) const { return size <= 32; }
